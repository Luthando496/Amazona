{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst userToken = localStorage.getItem('token') ? JSON.parse(localStorage.getItem('user')) : '';\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    loading: null,\n    er: null,\n    isAuth: false,\n    token: userToken\n  },\n  reducers: {\n    userRequest(state, action) {\n      state.loading = true;\n    },\n\n    userLogin(state, action) {\n      state.loading = false;\n      state.user = action.payload;\n      state.isAuth = true;\n    },\n\n    tokes(state, action) {\n      state.token = action.payload.token;\n    },\n\n    userFail(state, action) {\n      state.er = action.payload;\n      state.loading = false;\n      state.user = null;\n      state.isAuth = false;\n    },\n\n    userRegister(state, action) {\n      state.user = action.payload;\n      state.loading = false;\n      state.isAuth = true;\n    },\n\n    userLogout(state, action) {\n      state.loading = false;\n      state.user = null;\n      state.isAuth = false;\n    },\n\n    loadUser(state, action) {\n      state.loading = false;\n      state.user = action.payload;\n      state.isAuth = false;\n      state.er = null;\n    },\n\n    loadUserFail(state, action) {\n      state.loading = false;\n      state.user = null;\n      state.isAuth = false;\n      state.er = action.payload;\n    }\n\n  }\n});\nexport const authAction = authSlice.actions;\nexport const authReducer = authSlice;","map":{"version":3,"sources":["C:/Users/imang/music/ecommerce/front/src/Store/userReducder.js"],"names":["configureStore","createSlice","userToken","localStorage","getItem","JSON","parse","authSlice","name","initialState","user","loading","er","isAuth","token","reducers","userRequest","state","action","userLogin","payload","tokes","userFail","userRegister","userLogout","loadUser","loadUserFail","authAction","actions","authReducer"],"mappings":"AAAA,SAAQA,cAAR,EAAuBC,WAAvB,QAAyC,kBAAzC;AAEA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAgCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAhC,GAA0E,EAA5F;AAEA,MAAMG,SAAS,GAAGN,WAAW,CAAC;AAC1BO,EAAAA,IAAI,EAAC,MADqB;AAE1BC,EAAAA,YAAY,EAAC;AAACC,IAAAA,IAAI,EAAC,IAAN;AAAWC,IAAAA,OAAO,EAAC,IAAnB;AAAwBC,IAAAA,EAAE,EAAC,IAA3B;AAAgCC,IAAAA,MAAM,EAAC,KAAvC;AAA6CC,IAAAA,KAAK,EAACZ;AAAnD,GAFa;AAG1Ba,EAAAA,QAAQ,EAAC;AACLC,IAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAe;AACtBD,MAAAA,KAAK,CAACN,OAAN,GAAe,IAAf;AACH,KAHI;;AAILQ,IAAAA,SAAS,CAACF,KAAD,EAAQC,MAAR,EAAe;AACpBD,MAAAA,KAAK,CAACN,OAAN,GAAgB,KAAhB;AACAM,MAAAA,KAAK,CAACP,IAAN,GAAaQ,MAAM,CAACE,OAApB;AACAH,MAAAA,KAAK,CAACJ,MAAN,GAAe,IAAf;AACH,KARI;;AASLQ,IAAAA,KAAK,CAACJ,KAAD,EAAQC,MAAR,EAAe;AAChBD,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACE,OAAP,CAAeN,KAA7B;AAEH,KAZI;;AAaLQ,IAAAA,QAAQ,CAACL,KAAD,EAAQC,MAAR,EAAe;AACnBD,MAAAA,KAAK,CAACL,EAAN,GAAWM,MAAM,CAACE,OAAlB;AACAH,MAAAA,KAAK,CAACN,OAAN,GAAe,KAAf;AACAM,MAAAA,KAAK,CAACP,IAAN,GAAa,IAAb;AACAO,MAAAA,KAAK,CAACJ,MAAN,GAAe,KAAf;AACH,KAlBI;;AAmBLU,IAAAA,YAAY,CAACN,KAAD,EAAQC,MAAR,EAAe;AACvBD,MAAAA,KAAK,CAACP,IAAN,GAAaQ,MAAM,CAACE,OAApB;AACAH,MAAAA,KAAK,CAACN,OAAN,GAAgB,KAAhB;AACAM,MAAAA,KAAK,CAACJ,MAAN,GAAc,IAAd;AACH,KAvBI;;AAwBLW,IAAAA,UAAU,CAACP,KAAD,EAAQC,MAAR,EAAe;AACrBD,MAAAA,KAAK,CAACN,OAAN,GAAgB,KAAhB;AACAM,MAAAA,KAAK,CAACP,IAAN,GAAa,IAAb;AACAO,MAAAA,KAAK,CAACJ,MAAN,GAAe,KAAf;AACH,KA5BI;;AA6BLY,IAAAA,QAAQ,CAACR,KAAD,EAAQC,MAAR,EAAe;AACnBD,MAAAA,KAAK,CAACN,OAAN,GAAgB,KAAhB;AACAM,MAAAA,KAAK,CAACP,IAAN,GAAaQ,MAAM,CAACE,OAApB;AACAH,MAAAA,KAAK,CAACJ,MAAN,GAAe,KAAf;AACAI,MAAAA,KAAK,CAACL,EAAN,GAAW,IAAX;AACH,KAlCI;;AAmCLc,IAAAA,YAAY,CAACT,KAAD,EAAQC,MAAR,EAAe;AACvBD,MAAAA,KAAK,CAACN,OAAN,GAAgB,KAAhB;AACAM,MAAAA,KAAK,CAACP,IAAN,GAAa,IAAb;AACAO,MAAAA,KAAK,CAACJ,MAAN,GAAe,KAAf;AACAI,MAAAA,KAAK,CAACL,EAAN,GAAWM,MAAM,CAACE,OAAlB;AACH;;AAxCI;AAHiB,CAAD,CAA7B;AAoDA,OAAO,MAAMO,UAAU,GAAGpB,SAAS,CAACqB,OAA7B;AACP,OAAO,MAAMC,WAAW,GAAGtB,SAApB","sourcesContent":["import {configureStore,createSlice} from '@reduxjs/toolkit';\r\n\r\nconst userToken = localStorage.getItem('token') ? JSON.parse(localStorage.getItem('user')): ''\r\n\r\nconst authSlice = createSlice({\r\n    name:'auth',\r\n    initialState:{user:null,loading:null,er:null,isAuth:false,token:userToken},\r\n    reducers:{\r\n        userRequest(state, action){\r\n            state.loading =true\r\n        },\r\n        userLogin(state, action){\r\n            state.loading = false\r\n            state.user = action.payload\r\n            state.isAuth = true\r\n        },\r\n        tokes(state, action){\r\n            state.token = action.payload.token\r\n\r\n        },\r\n        userFail(state, action){\r\n            state.er = action.payload\r\n            state.loading =false\r\n            state.user = null\r\n            state.isAuth = false\r\n        },\r\n        userRegister(state, action){\r\n            state.user = action.payload\r\n            state.loading = false\r\n            state.isAuth =true\r\n        },\r\n        userLogout(state, action){\r\n            state.loading = false\r\n            state.user = null\r\n            state.isAuth = false\r\n        },\r\n        loadUser(state, action){\r\n            state.loading = false\r\n            state.user = action.payload\r\n            state.isAuth = false\r\n            state.er = null\r\n        },\r\n        loadUserFail(state, action){\r\n            state.loading = false\r\n            state.user = null\r\n            state.isAuth = false\r\n            state.er = action.payload\r\n        },\r\n\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\nexport const authAction = authSlice.actions\r\nexport const authReducer = authSlice\r\n\r\n"]},"metadata":{},"sourceType":"module"}