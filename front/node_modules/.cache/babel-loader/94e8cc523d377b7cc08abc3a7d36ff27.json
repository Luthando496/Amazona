{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst products = localStorage.getItem('products') ? localStorage.getItem('products') : [];\nconst productSlice = createSlice({\n  name: 'product',\n  initialState: {\n    products: products,\n    loading: true,\n    er: null\n  },\n  reducers: {\n    allProductsRequest(state, action) {\n      state.products = [];\n      state.loading = true;\n    },\n\n    ProductsSuccess(state, action) {\n      state.products = [action.payload];\n      state.loading = false;\n    },\n\n    ProductsFail(state, action) {\n      state.er = action.payload;\n      state.loading = false;\n      state.products = [];\n    }\n\n  }\n});\nexport const productAction = productSlice.actions;\nconst store = configureStore({\n  reducer: {\n    prod: productSlice.reducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/imang/music/ecommerce/front/src/Store/store.js"],"names":["configureStore","createSlice","products","localStorage","getItem","productSlice","name","initialState","loading","er","reducers","allProductsRequest","state","action","ProductsSuccess","payload","ProductsFail","productAction","actions","store","reducer","prod"],"mappings":"AAAA,SAAQA,cAAR,EAAuBC,WAAvB,QAAyC,kBAAzC;AAEA,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAkCD,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAlC,GAAqE,EAAtF;AAEA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAC,SADwB;AAE7BC,EAAAA,YAAY,EAAC;AAACL,IAAAA,QAAQ,EAACA,QAAV;AAAmBM,IAAAA,OAAO,EAAC,IAA3B;AAAgCC,IAAAA,EAAE,EAAC;AAAnC,GAFgB;AAG7BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,kBAAkB,CAACC,KAAD,EAAQC,MAAR,EAAe;AAC7BD,MAAAA,KAAK,CAACV,QAAN,GAAgB,EAAhB;AACAU,MAAAA,KAAK,CAACJ,OAAN,GAAe,IAAf;AACH,KAJI;;AAKLM,IAAAA,eAAe,CAACF,KAAD,EAAQC,MAAR,EAAe;AAC1BD,MAAAA,KAAK,CAACV,QAAN,GAAgB,CAACW,MAAM,CAACE,OAAR,CAAhB;AACAH,MAAAA,KAAK,CAACJ,OAAN,GAAe,KAAf;AACH,KARI;;AASLQ,IAAAA,YAAY,CAACJ,KAAD,EAAQC,MAAR,EAAe;AACvBD,MAAAA,KAAK,CAACH,EAAN,GAAUI,MAAM,CAACE,OAAjB;AACAH,MAAAA,KAAK,CAACJ,OAAN,GAAe,KAAf;AACAI,MAAAA,KAAK,CAACV,QAAN,GAAiB,EAAjB;AACH;;AAbI;AAHoB,CAAD,CAAhC;AAuBA,OAAO,MAAMe,aAAa,GAAGZ,YAAY,CAACa,OAAnC;AAGP,MAAMC,KAAK,GAAGnB,cAAc,CAAC;AACzBoB,EAAAA,OAAO,EAAC;AACJC,IAAAA,IAAI,EAAChB,YAAY,CAACe;AADd;AADiB,CAAD,CAA5B;AAOA,eAAeD,KAAf","sourcesContent":["import {configureStore,createSlice} from '@reduxjs/toolkit';\r\n\r\nconst products = localStorage.getItem('products') ?localStorage.getItem('products') : []\r\n\r\nconst productSlice = createSlice({\r\n    name:'product',\r\n    initialState:{products:products,loading:true,er:null},\r\n    reducers:{\r\n        allProductsRequest(state, action){\r\n            state.products =[]\r\n            state.loading =true\r\n        },\r\n        ProductsSuccess(state, action){\r\n            state.products =[action.payload]\r\n            state.loading =false\r\n        },\r\n        ProductsFail(state, action){\r\n            state.er =action.payload\r\n            state.loading =false\r\n            state.products = []\r\n        }\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const productAction = productSlice.actions\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        prod:productSlice.reducer\r\n    }\r\n})\r\n\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}