{"ast":null,"code":"import { productAction, detailsAction } from '../store';\nimport axios from 'axios';\nimport { authAction } from '../userReducder';\nexport const getproducts = function () {\n  let keyword = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let currentPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let price = arguments.length > 2 ? arguments[2] : undefined;\n  let category = arguments.length > 3 ? arguments[3] : undefined;\n  return async dispacth => {\n    try {\n      // console.log(category)\n      let link = `/v1/api/amazona/products?keyword=${keyword}&page=${currentPage}&price=[lte]=${price[1]}&price[gte]=${price[0]}`;\n\n      if (category) {\n        link = `/v1/api/amazona/products?keyword=${keyword}&page=${currentPage}&price=[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}`;\n      }\n\n      const {\n        data\n      } = await axios.get(link);\n      localStorage.setItem('products', JSON.stringify(data.products));\n      dispacth(productAction.ProductsSuccess(data));\n    } catch (err) {\n      console.log(err);\n      dispacth(productAction.ProductsFail(err || err.response || err.response.data));\n    }\n  };\n};\nexport const productDetails = id => async dispacth => {\n  // dispacth(detailsAction.allProductsRequest())\n  try {\n    const {\n      data\n    } = await axios.get(`/v1/api/amazona/single-product/${id}`);\n    console.log(data); // localStorage.setItem('products', JSON.stringify(data.products))\n\n    dispacth(detailsAction.ProductDetailsSuccess(data.product));\n  } catch (err) {\n    console.log(err);\n    dispacth(detailsAction.ProductsDetailsFail(err || err.response || err.response.data));\n  }\n};","map":{"version":3,"sources":["C:/Users/imang/music/ecommerce/front/src/Store/Actions/ProductsActions.js"],"names":["productAction","detailsAction","axios","authAction","getproducts","keyword","currentPage","price","category","dispacth","link","data","get","localStorage","setItem","JSON","stringify","products","ProductsSuccess","err","console","log","ProductsFail","response","productDetails","id","ProductDetailsSuccess","product","ProductsDetailsFail"],"mappings":"AAAA,SAAQA,aAAR,EAAsBC,aAAtB,QAA0C,UAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,iBAAzB;AAGA,OAAO,MAAMC,WAAW,GAAG;AAAA,MAACC,OAAD,uEAAW,EAAX;AAAA,MAAcC,WAAd,uEAA0B,CAA1B;AAAA,MAA4BC,KAA5B;AAAA,MAAkCC,QAAlC;AAAA,SACvB,MAAMC,QAAN,IAAiB;AACb,QAAG;AAEC;AAEA,UAAIC,IAAI,GAAI,oCAAmCL,OAAQ,SAAQC,WAAY,gBAAeC,KAAK,CAAC,CAAD,CAAI,eAAcA,KAAK,CAAC,CAAD,CAAI,EAA1H;;AAEA,UAAGC,QAAH,EAAY;AACRE,QAAAA,IAAI,GAAI,oCAAmCL,OAAQ,SAAQC,WAAY,gBAAeC,KAAK,CAAC,CAAD,CAAI,eAAcA,KAAK,CAAC,CAAD,CAAI,aAAYC,QAAS,EAA3I;AAEH;;AAED,YAAM;AAACG,QAAAA;AAAD,UAAS,MAAMT,KAAK,CAACU,GAAN,CAAUF,IAAV,CAArB;AAIAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAI,CAACM,QAApB,CAAjC;AACAR,MAAAA,QAAQ,CAACT,aAAa,CAACkB,eAAd,CAA8BP,IAA9B,CAAD,CAAR;AAIH,KApBD,CAoBC,OAAMQ,GAAN,EAAU;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAV,MAAAA,QAAQ,CAACT,aAAa,CAACsB,YAAd,CAA2BH,GAAG,IAAIA,GAAG,CAACI,QAAX,IAAuBJ,GAAG,CAACI,QAAJ,CAAaZ,IAA/D,CAAD,CAAR;AACH;AACR,GA1B0B;AAAA,CAApB;AA+BP,OAAO,MAAMa,cAAc,GAAIC,EAAD,IAC1B,MAAMhB,QAAN,IAAiB;AAEb;AACA,MAAG;AAEC,UAAM;AAACE,MAAAA;AAAD,QAAS,MAAMT,KAAK,CAACU,GAAN,CAAW,kCAAiCa,EAAG,EAA/C,CAArB;AAEAL,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ,EAJD,CAKC;;AAEAF,IAAAA,QAAQ,CAACR,aAAa,CAACyB,qBAAd,CAAoCf,IAAI,CAACgB,OAAzC,CAAD,CAAR;AAIH,GAXD,CAWC,OAAMR,GAAN,EAAU;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAV,IAAAA,QAAQ,CAACR,aAAa,CAAC2B,mBAAd,CAAkCT,GAAG,IAAIA,GAAG,CAACI,QAAX,IAAuBJ,GAAG,CAACI,QAAJ,CAAaZ,IAAtE,CAAD,CAAR;AACH;AACJ,CAnBE","sourcesContent":["import {productAction,detailsAction} from '../store'\r\nimport axios from 'axios'\r\nimport {authAction} from '../userReducder'\r\n\r\n\r\nexport const getproducts = (keyword = '',currentPage=1,price,category) =>\r\n    async dispacth =>{\r\n        try{\r\n\r\n            // console.log(category)\r\n\r\n            let link = `/v1/api/amazona/products?keyword=${keyword}&page=${currentPage}&price=[lte]=${price[1]}&price[gte]=${price[0]}`\r\n\r\n            if(category){\r\n                link = `/v1/api/amazona/products?keyword=${keyword}&page=${currentPage}&price=[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}` \r\n\r\n            }\r\n\r\n            const {data} = await axios.get(link)\r\n\r\n\r\n\r\n            localStorage.setItem('products', JSON.stringify(data.products))\r\n            dispacth(productAction.ProductsSuccess(data))\r\n\r\n\r\n\r\n        }catch(err){\r\n            console.log(err)\r\n            dispacth(productAction.ProductsFail(err || err.response || err.response.data))\r\n        }\r\n}\r\n\r\n\r\n\r\n\r\nexport const productDetails = (id) =>\r\n    async dispacth =>{\r\n\r\n        // dispacth(detailsAction.allProductsRequest())\r\n        try{\r\n\r\n            const {data} = await axios.get(`/v1/api/amazona/single-product/${id}`) \r\n\r\n            console.log(data)\r\n            // localStorage.setItem('products', JSON.stringify(data.products))\r\n\r\n            dispacth(detailsAction.ProductDetailsSuccess(data.product))\r\n\r\n\r\n\r\n        }catch(err){\r\n            console.log(err)\r\n            dispacth(detailsAction.ProductsDetailsFail(err || err.response || err.response.data))\r\n        }\r\n    }\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}