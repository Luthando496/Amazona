{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst products = localStorage.getItem('products') ? localStorage.getItem('products') : null;\nconst productSlice = createSlice({\n  name: 'product',\n  initialState: {\n    products: null,\n    loading: true,\n    er: null\n  },\n  reducers: {\n    allProductsRequest(state, action) {\n      state.products = [];\n      state.loading = true;\n    },\n\n    ProductsSuccess(state, action) {\n      state.products = action.payload;\n      state.loading = false;\n    },\n\n    ProductsFail(state, action) {\n      state.er = action.payload;\n      state.loading = false;\n      state.products = [];\n    }\n\n  }\n});\nconst productDetailsSlice = createSlice({\n  name: 'details',\n  initialState: {\n    product: null,\n    loading: true,\n    er: null,\n    resPerPage: null\n  },\n  reducers: {\n    allProductsRequest(state, action) {\n      state.product = state.loading = true;\n      state.resPerPage = action.payload.resPerPage;\n    },\n\n    ProductDetailsSuccess(state, action) {\n      state.product = action.payload;\n      state.loading = false;\n    },\n\n    ProductsDetailsFail(state, action) {\n      state.er = action.payload;\n      state.loading = false;\n      state.product = null;\n    }\n\n  }\n});\nexport const productAction = productSlice.actions;\nexport const detailsAction = productDetailsSlice.actions;\nconst store = configureStore({\n  reducer: {\n    prod: productSlice.reducer,\n    det: productDetailsSlice.reducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/imang/music/ecommerce/front/src/Store/store.js"],"names":["configureStore","createSlice","products","localStorage","getItem","productSlice","name","initialState","loading","er","reducers","allProductsRequest","state","action","ProductsSuccess","payload","ProductsFail","productDetailsSlice","product","resPerPage","ProductDetailsSuccess","ProductsDetailsFail","productAction","actions","detailsAction","store","reducer","prod","det"],"mappings":"AAAA,SAAQA,cAAR,EAAuBC,WAAvB,QAAyC,kBAAzC;AAEA,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAkCD,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAlC,GAAqE,IAAtF;AAEA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAC,SADwB;AAE7BC,EAAAA,YAAY,EAAC;AAACL,IAAAA,QAAQ,EAAC,IAAV;AAAeM,IAAAA,OAAO,EAAC,IAAvB;AAA4BC,IAAAA,EAAE,EAAC;AAA/B,GAFgB;AAG7BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,kBAAkB,CAACC,KAAD,EAAQC,MAAR,EAAe;AAC7BD,MAAAA,KAAK,CAACV,QAAN,GAAgB,EAAhB;AACAU,MAAAA,KAAK,CAACJ,OAAN,GAAe,IAAf;AACH,KAJI;;AAKLM,IAAAA,eAAe,CAACF,KAAD,EAAQC,MAAR,EAAe;AAC1BD,MAAAA,KAAK,CAACV,QAAN,GAAgBW,MAAM,CAACE,OAAvB;AACAH,MAAAA,KAAK,CAACJ,OAAN,GAAe,KAAf;AACH,KARI;;AASLQ,IAAAA,YAAY,CAACJ,KAAD,EAAQC,MAAR,EAAe;AACvBD,MAAAA,KAAK,CAACH,EAAN,GAAUI,MAAM,CAACE,OAAjB;AACAH,MAAAA,KAAK,CAACJ,OAAN,GAAe,KAAf;AACAI,MAAAA,KAAK,CAACV,QAAN,GAAiB,EAAjB;AACH;;AAbI;AAHoB,CAAD,CAAhC;AA0BA,MAAMe,mBAAmB,GAAGhB,WAAW,CAAC;AACpCK,EAAAA,IAAI,EAAC,SAD+B;AAEpCC,EAAAA,YAAY,EAAC;AAACW,IAAAA,OAAO,EAAC,IAAT;AAAcV,IAAAA,OAAO,EAAC,IAAtB;AAA2BC,IAAAA,EAAE,EAAC,IAA9B;AAAmCU,IAAAA,UAAU,EAAC;AAA9C,GAFuB;AAGpCT,EAAAA,QAAQ,EAAC;AACLC,IAAAA,kBAAkB,CAACC,KAAD,EAAQC,MAAR,EAAe;AAC7BD,MAAAA,KAAK,CAACM,OAAN,GACAN,KAAK,CAACJ,OAAN,GAAe,IADf;AAEAI,MAAAA,KAAK,CAACO,UAAN,GAAmBN,MAAM,CAACE,OAAP,CAAeI,UAAlC;AACH,KALI;;AAMLC,IAAAA,qBAAqB,CAACR,KAAD,EAAQC,MAAR,EAAe;AAChCD,MAAAA,KAAK,CAACM,OAAN,GAAeL,MAAM,CAACE,OAAtB;AACAH,MAAAA,KAAK,CAACJ,OAAN,GAAe,KAAf;AACH,KATI;;AAULa,IAAAA,mBAAmB,CAACT,KAAD,EAAQC,MAAR,EAAe;AAC9BD,MAAAA,KAAK,CAACH,EAAN,GAAUI,MAAM,CAACE,OAAjB;AACAH,MAAAA,KAAK,CAACJ,OAAN,GAAe,KAAf;AACAI,MAAAA,KAAK,CAACM,OAAN,GAAgB,IAAhB;AACH;;AAdI;AAH2B,CAAD,CAAvC;AAwBA,OAAO,MAAMI,aAAa,GAAGjB,YAAY,CAACkB,OAAnC;AACP,OAAO,MAAMC,aAAa,GAAGP,mBAAmB,CAACM,OAA1C;AAGP,MAAME,KAAK,GAAGzB,cAAc,CAAC;AACzB0B,EAAAA,OAAO,EAAC;AACJC,IAAAA,IAAI,EAACtB,YAAY,CAACqB,OADd;AAEJE,IAAAA,GAAG,EAACX,mBAAmB,CAACS;AAFpB;AADiB,CAAD,CAA5B;AAQA,eAAeD,KAAf","sourcesContent":["import {configureStore,createSlice} from '@reduxjs/toolkit';\r\n\r\nconst products = localStorage.getItem('products') ?localStorage.getItem('products') : null\r\n\r\nconst productSlice = createSlice({\r\n    name:'product',\r\n    initialState:{products:null,loading:true,er:null},\r\n    reducers:{\r\n        allProductsRequest(state, action){\r\n            state.products =[]\r\n            state.loading =true\r\n        },\r\n        ProductsSuccess(state, action){\r\n            state.products =action.payload\r\n            state.loading =false\r\n        },\r\n        ProductsFail(state, action){\r\n            state.er =action.payload\r\n            state.loading =false\r\n            state.products = []\r\n        }\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst productDetailsSlice = createSlice({\r\n    name:'details',\r\n    initialState:{product:null,loading:true,er:null,resPerPage:null},\r\n    reducers:{\r\n        allProductsRequest(state, action){\r\n            state.product =\r\n            state.loading =true\r\n            state.resPerPage = action.payload.resPerPage\r\n        },\r\n        ProductDetailsSuccess(state, action){\r\n            state.product =action.payload\r\n            state.loading =false\r\n        },\r\n        ProductsDetailsFail(state, action){\r\n            state.er =action.payload\r\n            state.loading =false\r\n            state.product = null\r\n        }\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const productAction = productSlice.actions\r\nexport const detailsAction = productDetailsSlice.actions\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        prod:productSlice.reducer,\r\n        det:productDetailsSlice.reducer\r\n    }\r\n})\r\n\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}