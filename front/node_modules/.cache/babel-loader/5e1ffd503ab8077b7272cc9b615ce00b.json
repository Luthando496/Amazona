{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nimport { authReducer } from './userReducder';\nimport { cartReducer } from './CartReducer';\nimport { ShipReducer } from './ShipReducer';\nconst productSlice = createSlice({\n  name: 'product',\n  initialState: {\n    products: null,\n    loading: true,\n    er: null,\n    resPerPage: null,\n    newProd: {},\n    proErr: null,\n    proLoad: true,\n    image: []\n  },\n  reducers: {\n    allProductsRequest(state, action) {\n      state.products = [];\n      state.loading = true;\n    },\n\n    ProductsSuccess(state, action) {\n      state.products = action.payload;\n      state.loading = false;\n      state.resPerPage = action.payload.resPerPage;\n    },\n\n    ProductsFail(state, action) {\n      state.er = action.payload;\n      state.loading = false;\n      state.products = [];\n    },\n\n    newProduct(state, action) {\n      state.newProd = action.payload;\n      state.proErr = null;\n      state.proLoad = false;\n    },\n\n    newPhoto(state, action) {\n      state.image = action.payload;\n    },\n\n    newProdFail(state, action) {\n      state.newProd = {};\n      state.proErr = action.payload;\n      state.proLoad = false;\n    }\n\n  }\n});\nconst productDetailsSlice = createSlice({\n  name: 'details',\n  initialState: {\n    product: null,\n    loading: true,\n    er: null\n  },\n  reducers: {\n    allProductsRequest(state, action) {\n      state.product = state.loading = true;\n    },\n\n    ProductDetailsSuccess(state, action) {\n      state.product = action.payload;\n      state.loading = false;\n    },\n\n    ProductsDetailsFail(state, action) {\n      state.er = action.payload;\n      state.loading = false;\n      state.product = null;\n    }\n\n  }\n});\nexport const productAction = productSlice.actions;\nexport const detailsAction = productDetailsSlice.actions;\nconst store = configureStore({\n  reducer: {\n    prod: productSlice.reducer,\n    det: productDetailsSlice.reducer,\n    auth: authReducer.reducer,\n    cart: cartReducer,\n    ship: ShipReducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/imang/music/ecommerce/front/src/Store/store.js"],"names":["configureStore","createSlice","authReducer","cartReducer","ShipReducer","productSlice","name","initialState","products","loading","er","resPerPage","newProd","proErr","proLoad","image","reducers","allProductsRequest","state","action","ProductsSuccess","payload","ProductsFail","newProduct","newPhoto","newProdFail","productDetailsSlice","product","ProductDetailsSuccess","ProductsDetailsFail","productAction","actions","detailsAction","store","reducer","prod","det","auth","cart","ship"],"mappings":"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","sourcesContent":["import {configureStore,createSlice} from '@reduxjs/toolkit';\r\nimport {authReducer} from './userReducder'\r\nimport {cartReducer} from './CartReducer'\r\nimport {ShipReducer} from './ShipReducer'\r\n\r\n\r\n\r\nconst productSlice = createSlice({\r\n    name:'product',\r\n    initialState:{products:null,loading:true,er:null,resPerPage:null,newProd:{},proErr:null,proLoad:true,image:[] },\r\n    reducers:{\r\n        allProductsRequest(state, action){\r\n            state.products =[]\r\n            state.loading =true\r\n        },\r\n        ProductsSuccess(state, action){\r\n            state.products =action.payload\r\n            state.loading =false\r\n            state.resPerPage = action.payload.resPerPage\r\n        },\r\n        ProductsFail(state, action){\r\n            state.er =action.payload\r\n            state.loading =false\r\n            state.products = []\r\n        },\r\n        newProduct(state, action){\r\n            state.newProd = action.payload\r\n            state.proErr = null\r\n            state.proLoad = false\r\n        },\r\n        newPhoto(state, action){\r\n            state.image = action.payload\r\n        },\r\n\r\n        newProdFail(state, action){\r\n            state.newProd = {}\r\n            state.proErr = action.payload\r\n            state.proLoad = false\r\n        }\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst productDetailsSlice = createSlice({\r\n    name:'details',\r\n    initialState:{product:null,loading:true,er:null},\r\n    reducers:{\r\n        allProductsRequest(state, action){\r\n            state.product =\r\n            state.loading =true\r\n        },\r\n        ProductDetailsSuccess(state, action){\r\n            state.product =action.payload\r\n            state.loading =false\r\n        },\r\n        ProductsDetailsFail(state, action){\r\n            state.er =action.payload\r\n            state.loading =false\r\n            state.product = null\r\n        }\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const productAction = productSlice.actions\r\nexport const detailsAction = productDetailsSlice.actions\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        prod:productSlice.reducer,\r\n        det:productDetailsSlice.reducer,\r\n        auth:authReducer.reducer,\r\n        cart:cartReducer,\r\n        ship:ShipReducer\r\n    }\r\n})\r\n\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}