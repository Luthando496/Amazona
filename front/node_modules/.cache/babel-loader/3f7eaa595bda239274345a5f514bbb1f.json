{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartStore = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: cartStore\n  },\n  reducers: {\n    addTocart(state, action) {\n      const item = action.payload;\n      const exist = state.items.find(p => p.id === item.id);\n\n      if (!exist) {\n        state.items.push({\n          _id: item._id,\n          name: item.name,\n          price: item.price,\n          description: item.description,\n          ratings: item.ratings,\n          category: item.category,\n          seller: item.seller,\n          stock: item.stock,\n          image: item.image,\n          numOfReviews: item.numOfReviews,\n          createdAt: item.createdAt,\n          id: item.id,\n          quantity: 1\n        });\n      } else {\n        exist.stock--;\n        exist.quantity++;\n      } // if(exist.stock === 0){\n      //     exist.stock = 0\n      // }\n\n    },\n\n    removeItem(state, action) {\n      const id = action.payload;\n      const exist = state.items.find(p => p.id === id);\n\n      if (exist.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        exist.quantity--;\n      }\n    }\n\n  }\n});\nexport const cartAction = cartSlice.actions;\nexport const cartReducer = cartSlice.reducer;","map":{"version":3,"sources":["C:/Users/imang/music/ecommerce/front/src/Store/CartReducer.js"],"names":["createSlice","cartStore","localStorage","getItem","JSON","parse","cartSlice","name","initialState","items","reducers","addTocart","state","action","item","payload","exist","find","p","id","push","_id","price","description","ratings","category","seller","stock","image","numOfReviews","createdAt","quantity","removeItem","filter","cartAction","actions","cartReducer","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA+BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAA/B,GAAyE,EAA3F;AAGA,MAAMG,SAAS,GAAGN,WAAW,CAAC;AAC1BO,EAAAA,IAAI,EAAC,MADqB;AAE1BC,EAAAA,YAAY,EAAC;AAACC,IAAAA,KAAK,EAACR;AAAP,GAFa;AAG1BS,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAe;AACpB,YAAMC,IAAI,GAAGD,MAAM,CAACE,OAApB;AACA,YAAMC,KAAK,GAAGJ,KAAK,CAACH,KAAN,CAAYQ,IAAZ,CAAiBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,IAAI,CAACK,EAApC,CAAd;;AAEA,UAAG,CAACH,KAAJ,EAAU;AACNJ,QAAAA,KAAK,CAACH,KAAN,CAAYW,IAAZ,CAAiB;AACbC,UAAAA,GAAG,EAACP,IAAI,CAACO,GADI;AAEbd,UAAAA,IAAI,EAACO,IAAI,CAACP,IAFG;AAGbe,UAAAA,KAAK,EAACR,IAAI,CAACQ,KAHE;AAIbC,UAAAA,WAAW,EAACT,IAAI,CAACS,WAJJ;AAKbC,UAAAA,OAAO,EAACV,IAAI,CAACU,OALA;AAMbC,UAAAA,QAAQ,EAACX,IAAI,CAACW,QAND;AAObC,UAAAA,MAAM,EAACZ,IAAI,CAACY,MAPC;AAQbC,UAAAA,KAAK,EAACb,IAAI,CAACa,KARE;AASbC,UAAAA,KAAK,EAACd,IAAI,CAACc,KATE;AAUbC,UAAAA,YAAY,EAACf,IAAI,CAACe,YAVL;AAWbC,UAAAA,SAAS,EAAChB,IAAI,CAACgB,SAXF;AAYbX,UAAAA,EAAE,EAACL,IAAI,CAACK,EAZK;AAabY,UAAAA,QAAQ,EAAC;AAbI,SAAjB;AAeH,OAhBD,MAgBK;AACDf,QAAAA,KAAK,CAACW,KAAN;AACAX,QAAAA,KAAK,CAACe,QAAN;AACH,OAvBmB,CAyBpB;AACA;AAEA;;AAGH,KAhCI;;AAiCLC,IAAAA,UAAU,CAACpB,KAAD,EAAQC,MAAR,EAAe;AACrB,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,KAAK,GAAGJ,KAAK,CAACH,KAAN,CAAYQ,IAAZ,CAAiBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASA,EAA/B,CAAd;;AACA,UAAGH,KAAK,CAACe,QAAN,KAAmB,CAAtB,EAAwB;AACpBnB,QAAAA,KAAK,CAACH,KAAN,GAAcG,KAAK,CAACH,KAAN,CAAYwB,MAAZ,CAAmBnB,IAAI,IAAIA,IAAI,CAACK,EAAL,KAAYA,EAAvC,CAAd;AAEH,OAHD,MAGK;AACDH,QAAAA,KAAK,CAACe,QAAN;AACH;AACJ;;AA1CI;AAHiB,CAAD,CAA7B;AAmDA,OAAO,MAAMG,UAAU,GAAG5B,SAAS,CAAC6B,OAA7B;AACP,OAAO,MAAMC,WAAW,GAAG9B,SAAS,CAAC+B,OAA9B","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\r\n\r\nconst cartStore = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) :[]\r\n\r\n\r\nconst cartSlice = createSlice({\r\n    name:'cart',\r\n    initialState:{items:cartStore},\r\n    reducers:{\r\n        addTocart(state, action){\r\n            const item = action.payload\r\n            const exist = state.items.find(p => p.id === item.id)\r\n\r\n            if(!exist){\r\n                state.items.push({\r\n                    _id:item._id,\r\n                    name:item.name,\r\n                    price:item.price,\r\n                    description:item.description,\r\n                    ratings:item.ratings,\r\n                    category:item.category,\r\n                    seller:item.seller,\r\n                    stock:item.stock,\r\n                    image:item.image,\r\n                    numOfReviews:item.numOfReviews,\r\n                    createdAt:item.createdAt,\r\n                    id:item.id,\r\n                    quantity:1\r\n})\r\n            }else{\r\n                exist.stock--\r\n                exist.quantity++\r\n            }\r\n\r\n            // if(exist.stock === 0){\r\n            //     exist.stock = 0\r\n\r\n            // }\r\n\r\n\r\n        },\r\n        removeItem(state, action){\r\n            const id = action.payload\r\n            const exist = state.items.find(p => p.id === id)\r\n            if(exist.quantity === 1){\r\n                state.items = state.items.filter(item => item.id !== id)\r\n\r\n            }else{\r\n                exist.quantity--\r\n            }\r\n        }\r\n\r\n    }\r\n})\r\n\r\n\r\nexport const cartAction = cartSlice.actions\r\nexport const cartReducer = cartSlice.reducer"]},"metadata":{},"sourceType":"module"}