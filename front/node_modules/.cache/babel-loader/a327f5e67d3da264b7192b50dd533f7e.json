{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nimport { authReducer } from './userReducder';\nimport { cartReducer } from './CartReducer';\nimport { ShipReducer } from './ShipReducer';\nconst productSlice = createSlice({\n  name: 'product',\n  initialState: {\n    products: null,\n    loading: true,\n    er: null,\n    resPerPage: null,\n    newProd: {},\n    proErr: null,\n    proLoad: true\n  },\n  reducers: {\n    allProductsRequest(state, action) {\n      state.products = [];\n      state.loading = true;\n    },\n\n    ProductsSuccess(state, action) {\n      state.products = action.payload;\n      state.loading = false;\n      state.resPerPage = action.payload.resPerPage;\n    },\n\n    ProductsFail(state, action) {\n      state.er = action.payload;\n      state.loading = false;\n      state.products = [];\n    },\n\n    newProduct(state, action) {\n      state.newProd = action.payload;\n      state.proErr = null;\n      state.proLoad = false;\n    },\n\n    newProdFail(state, action) {\n      state.newProd = {};\n      state.proErr = action.payload;\n      state.proLoad = false;\n    }\n\n  }\n});\nconst productDetailsSlice = createSlice({\n  name: 'details',\n  initialState: {\n    product: null,\n    loading: true,\n    er: null\n  },\n  reducers: {\n    allProductsRequest(state, action) {\n      state.product = state.loading = true;\n    },\n\n    ProductDetailsSuccess(state, action) {\n      state.product = action.payload;\n      state.loading = false;\n    },\n\n    ProductsDetailsFail(state, action) {\n      state.er = action.payload;\n      state.loading = false;\n      state.product = null;\n    }\n\n  }\n});\nexport const productAction = productSlice.actions;\nexport const detailsAction = productDetailsSlice.actions;\nconst store = configureStore({\n  reducer: {\n    prod: productSlice.reducer,\n    det: productDetailsSlice.reducer,\n    auth: authReducer.reducer,\n    cart: cartReducer,\n    ship: ShipReducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/imang/music/ecommerce/front/src/Store/store.js"],"names":["configureStore","createSlice","authReducer","cartReducer","ShipReducer","productSlice","name","initialState","products","loading","er","resPerPage","newProd","proErr","proLoad","reducers","allProductsRequest","state","action","ProductsSuccess","payload","ProductsFail","newProduct","newProdFail","productDetailsSlice","product","ProductDetailsSuccess","ProductsDetailsFail","productAction","actions","detailsAction","store","reducer","prod","det","auth","cart","ship"],"mappings":"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","sourcesContent":["import {configureStore,createSlice} from '@reduxjs/toolkit';\r\nimport {authReducer} from './userReducder'\r\nimport {cartReducer} from './CartReducer'\r\nimport {ShipReducer} from './ShipReducer'\r\n\r\n\r\n\r\nconst productSlice = createSlice({\r\n    name:'product',\r\n    initialState:{products:null,loading:true,er:null,resPerPage:null,newProd:{},proErr:null,proLoad:true },\r\n    reducers:{\r\n        allProductsRequest(state, action){\r\n            state.products =[]\r\n            state.loading =true\r\n        },\r\n        ProductsSuccess(state, action){\r\n            state.products =action.payload\r\n            state.loading =false\r\n            state.resPerPage = action.payload.resPerPage\r\n        },\r\n        ProductsFail(state, action){\r\n            state.er =action.payload\r\n            state.loading =false\r\n            state.products = []\r\n        },\r\n        newProduct(state, action){\r\n            state.newProd = action.payload\r\n            state.proErr = null\r\n            state.proLoad = false\r\n        },\r\n        newProdFail(state, action){\r\n            state.newProd = {}\r\n            state.proErr = action.payload\r\n            state.proLoad = false\r\n        }\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst productDetailsSlice = createSlice({\r\n    name:'details',\r\n    initialState:{product:null,loading:true,er:null},\r\n    reducers:{\r\n        allProductsRequest(state, action){\r\n            state.product =\r\n            state.loading =true\r\n        },\r\n        ProductDetailsSuccess(state, action){\r\n            state.product =action.payload\r\n            state.loading =false\r\n        },\r\n        ProductsDetailsFail(state, action){\r\n            state.er =action.payload\r\n            state.loading =false\r\n            state.product = null\r\n        }\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const productAction = productSlice.actions\r\nexport const detailsAction = productDetailsSlice.actions\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        prod:productSlice.reducer,\r\n        det:productDetailsSlice.reducer,\r\n        auth:authReducer.reducer,\r\n        cart:cartReducer,\r\n        ship:ShipReducer\r\n    }\r\n})\r\n\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}