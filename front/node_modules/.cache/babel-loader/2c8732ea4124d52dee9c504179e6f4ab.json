{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nimport { authReducer } from './userReducder';\nconst productSlice = createSlice({\n  name: 'product',\n  initialState: {\n    products: null,\n    loading: true,\n    er: null,\n    resPerPage: null\n  },\n  reducers: {\n    allProductsRequest(state, action) {\n      state.products = [];\n      state.loading = true;\n    },\n\n    ProductsSuccess(state, action) {\n      state.products = action.payload;\n      state.loading = false;\n      state.resPerPage = action.payload.resPerPage;\n    },\n\n    ProductsFail(state, action) {\n      state.er = action.payload;\n      state.loading = false;\n      state.products = [];\n    }\n\n  }\n});\nconst productDetailsSlice = createSlice({\n  name: 'details',\n  initialState: {\n    product: null,\n    loading: true,\n    er: null\n  },\n  reducers: {\n    allProductsRequest(state, action) {\n      state.product = state.loading = true;\n    },\n\n    ProductDetailsSuccess(state, action) {\n      state.product = action.payload;\n      state.loading = false;\n    },\n\n    ProductsDetailsFail(state, action) {\n      state.er = action.payload;\n      state.loading = false;\n      state.product = null;\n    }\n\n  }\n});\nexport const productAction = productSlice.actions;\nexport const detailsAction = productDetailsSlice.actions;\nconst store = configureStore({\n  reducer: {\n    prod: productSlice.reducer,\n    det: productDetailsSlice.reducer,\n    auth: authReducer.reducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/imang/music/ecommerce/front/src/Store/store.js"],"names":["configureStore","createSlice","authReducer","productSlice","name","initialState","products","loading","er","resPerPage","reducers","allProductsRequest","state","action","ProductsSuccess","payload","ProductsFail","productDetailsSlice","product","ProductDetailsSuccess","ProductsDetailsFail","productAction","actions","detailsAction","store","reducer","prod","det","auth"],"mappings":"AAAA,SAAQA,cAAR,EAAuBC,WAAvB,QAAyC,kBAAzC;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AAIA,MAAMC,YAAY,GAAGF,WAAW,CAAC;AAC7BG,EAAAA,IAAI,EAAC,SADwB;AAE7BC,EAAAA,YAAY,EAAC;AAACC,IAAAA,QAAQ,EAAC,IAAV;AAAeC,IAAAA,OAAO,EAAC,IAAvB;AAA4BC,IAAAA,EAAE,EAAC,IAA/B;AAAoCC,IAAAA,UAAU,EAAC;AAA/C,GAFgB;AAG7BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,kBAAkB,CAACC,KAAD,EAAQC,MAAR,EAAe;AAC7BD,MAAAA,KAAK,CAACN,QAAN,GAAgB,EAAhB;AACAM,MAAAA,KAAK,CAACL,OAAN,GAAe,IAAf;AACH,KAJI;;AAKLO,IAAAA,eAAe,CAACF,KAAD,EAAQC,MAAR,EAAe;AAC1BD,MAAAA,KAAK,CAACN,QAAN,GAAgBO,MAAM,CAACE,OAAvB;AACAH,MAAAA,KAAK,CAACL,OAAN,GAAe,KAAf;AACAK,MAAAA,KAAK,CAACH,UAAN,GAAmBI,MAAM,CAACE,OAAP,CAAeN,UAAlC;AACH,KATI;;AAULO,IAAAA,YAAY,CAACJ,KAAD,EAAQC,MAAR,EAAe;AACvBD,MAAAA,KAAK,CAACJ,EAAN,GAAUK,MAAM,CAACE,OAAjB;AACAH,MAAAA,KAAK,CAACL,OAAN,GAAe,KAAf;AACAK,MAAAA,KAAK,CAACN,QAAN,GAAiB,EAAjB;AACH;;AAdI;AAHoB,CAAD,CAAhC;AA2BA,MAAMW,mBAAmB,GAAGhB,WAAW,CAAC;AACpCG,EAAAA,IAAI,EAAC,SAD+B;AAEpCC,EAAAA,YAAY,EAAC;AAACa,IAAAA,OAAO,EAAC,IAAT;AAAcX,IAAAA,OAAO,EAAC,IAAtB;AAA2BC,IAAAA,EAAE,EAAC;AAA9B,GAFuB;AAGpCE,EAAAA,QAAQ,EAAC;AACLC,IAAAA,kBAAkB,CAACC,KAAD,EAAQC,MAAR,EAAe;AAC7BD,MAAAA,KAAK,CAACM,OAAN,GACAN,KAAK,CAACL,OAAN,GAAe,IADf;AAEH,KAJI;;AAKLY,IAAAA,qBAAqB,CAACP,KAAD,EAAQC,MAAR,EAAe;AAChCD,MAAAA,KAAK,CAACM,OAAN,GAAeL,MAAM,CAACE,OAAtB;AACAH,MAAAA,KAAK,CAACL,OAAN,GAAe,KAAf;AACH,KARI;;AASLa,IAAAA,mBAAmB,CAACR,KAAD,EAAQC,MAAR,EAAe;AAC9BD,MAAAA,KAAK,CAACJ,EAAN,GAAUK,MAAM,CAACE,OAAjB;AACAH,MAAAA,KAAK,CAACL,OAAN,GAAe,KAAf;AACAK,MAAAA,KAAK,CAACM,OAAN,GAAgB,IAAhB;AACH;;AAbI;AAH2B,CAAD,CAAvC;AAuBA,OAAO,MAAMG,aAAa,GAAGlB,YAAY,CAACmB,OAAnC;AACP,OAAO,MAAMC,aAAa,GAAGN,mBAAmB,CAACK,OAA1C;AAGP,MAAME,KAAK,GAAGxB,cAAc,CAAC;AACzByB,EAAAA,OAAO,EAAC;AACJC,IAAAA,IAAI,EAACvB,YAAY,CAACsB,OADd;AAEJE,IAAAA,GAAG,EAACV,mBAAmB,CAACQ,OAFpB;AAGJG,IAAAA,IAAI,EAAC1B,WAAW,CAACuB;AAHb;AADiB,CAAD,CAA5B;AASA,eAAeD,KAAf","sourcesContent":["import {configureStore,createSlice} from '@reduxjs/toolkit';\r\nimport {authReducer} from './userReducder'\r\n\r\n\r\n\r\nconst productSlice = createSlice({\r\n    name:'product',\r\n    initialState:{products:null,loading:true,er:null,resPerPage:null},\r\n    reducers:{\r\n        allProductsRequest(state, action){\r\n            state.products =[]\r\n            state.loading =true\r\n        },\r\n        ProductsSuccess(state, action){\r\n            state.products =action.payload\r\n            state.loading =false\r\n            state.resPerPage = action.payload.resPerPage\r\n        },\r\n        ProductsFail(state, action){\r\n            state.er =action.payload\r\n            state.loading =false\r\n            state.products = []\r\n        }\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst productDetailsSlice = createSlice({\r\n    name:'details',\r\n    initialState:{product:null,loading:true,er:null},\r\n    reducers:{\r\n        allProductsRequest(state, action){\r\n            state.product =\r\n            state.loading =true\r\n        },\r\n        ProductDetailsSuccess(state, action){\r\n            state.product =action.payload\r\n            state.loading =false\r\n        },\r\n        ProductsDetailsFail(state, action){\r\n            state.er =action.payload\r\n            state.loading =false\r\n            state.product = null\r\n        }\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\nexport const productAction = productSlice.actions\r\nexport const detailsAction = productDetailsSlice.actions\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        prod:productSlice.reducer,\r\n        det:productDetailsSlice.reducer,\r\n        auth:authReducer.reducer\r\n    }\r\n})\r\n\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}